/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Persistencia.*;
import javax.swing.JOptionPane;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Iterator;
import Modelos.*;

/**
 *
 * @author M
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonListaLinkedList = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableGridDadosRelatorio = new javax.swing.JTable();
        jButtonListarDadosStack = new javax.swing.JButton();
        jButtonListarArrayList = new javax.swing.JButton();
        jButtonVector = new javax.swing.JButton();
        jButtonLimparDados = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PROJETO DADOS RELATORIO");
        setBackground(new java.awt.Color(0, 0, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("DADOS DO RELATORIO NA GRID");

        jButtonListaLinkedList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonListaLinkedList.setText("LINKED LIST");
        jButtonListaLinkedList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListaLinkedListActionPerformed(evt);
            }
        });

        jTableGridDadosRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "CURSO", "SITUACAO", "ENFASE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableGridDadosRelatorio);

        jButtonListarDadosStack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonListarDadosStack.setText("STACK");
        jButtonListarDadosStack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarDadosStackActionPerformed(evt);
            }
        });

        jButtonListarArrayList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonListarArrayList.setText("ARRAY LIST");
        jButtonListarArrayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarArrayListActionPerformed(evt);
            }
        });

        jButtonVector.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonVector.setText("VECTOR");
        jButtonVector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVectorActionPerformed(evt);
            }
        });

        jButtonLimparDados.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonLimparDados.setText("LIMPAR DADOS");
        jButtonLimparDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparDadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonListaLinkedList, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonListarDadosStack, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonListarArrayList, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonLimparDados)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jButtonVector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonLimparDados))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonListaLinkedList)
                    .addComponent(jButtonListarDadosStack)
                    .addComponent(jButtonListarArrayList)
                    .addComponent(jButtonVector))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private enum botoes {
        LinkedList, Stack, ArrayList, Vector;
    }

    private Iterator identificaBotao(String botao, String localArquivo) throws Exception {

        Iterator saida = null;
        IDados dadosAlunos = null;

        botoes tipo = botoes.valueOf(botao);

        switch (tipo) {
            case LinkedList:
                dadosAlunos = new AlunoDadosLinkedList();
                saida = dadosAlunos.obterListagemDeAluno(localArquivo);
                if (saida == null) {
                    throw new Exception("ERRO NA OBTENÇÃO DOS DADOS DO BOTÃO LINKED LIST!");
                }
                break;
            case Stack:
                dadosAlunos = new AlunoDadosStack();
                saida = dadosAlunos.obterListagemDeAluno(localArquivo);
                if (saida == null) {
                    throw new Exception("ERRO NA OBTENÇÃO DOS DADOS DO BOTÃO STACK!");
                }
                break;
            case ArrayList:
                dadosAlunos = new AlunoDadosArrayList();
                saida = dadosAlunos.obterListagemDeAluno(localArquivo);
                if (saida == null) {
                    throw new Exception("ERRO NA OBTENÇÃO DOS DADOS DO BOTÃO ARRAY LIST!");
                }
                break;
            case Vector:
                dadosAlunos = new AlunoDadosVector();
                saida = dadosAlunos.obterListagemDeAluno(localArquivo);
                if (saida == null) {
                    throw new Exception("ERRO NA OBTENÇÃO DOS DADOS DO BOTÃO VECTOR!");
                }
                break;
            //default:
            }

        return saida;
    }

    private void mostrarDados(String botao, String localArquivo) {
        try {
            Iterator dados = identificaBotao(botao, localArquivo);
            
            //Trabalhando a Grid
            DefaultTableModel model = (DefaultTableModel) jTableGridDadosRelatorio.getModel();
            model.setNumRows(0);
            while (dados.hasNext()) {
                Aluno objetoRelatorio = (Aluno) dados.next();
                String[] linha = new String[4];
                linha[0] = objetoRelatorio.getNome();
                linha[1] = objetoRelatorio.getCurso();
                linha[2] = objetoRelatorio.getSituacao();
                linha[3] = objetoRelatorio.getEnfase();
                model.addRow(linha);
            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro.getMessage());
        }
    }

    private void jButtonListaLinkedListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListaLinkedListActionPerformed
        String arquivo = "./src/ArquivoDados/RelatorioDasEnfases.csv";
        mostrarDados("LinkedList", arquivo);
    }//GEN-LAST:event_jButtonListaLinkedListActionPerformed

    private void jButtonListarDadosStackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarDadosStackActionPerformed
        String arquivo = "./src/ArquivoDados/RelatorioDasEnfases.csv";
        mostrarDados("Stack", arquivo);
    }//GEN-LAST:event_jButtonListarDadosStackActionPerformed

    private void jButtonListarArrayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarArrayListActionPerformed
        String arquivo = "./src/ArquivoDados/RelatorioDasEnfases.csv";
        mostrarDados("ArrayList", arquivo);
    }//GEN-LAST:event_jButtonListarArrayListActionPerformed

    private void jButtonVectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVectorActionPerformed
        String arquivo = "./src/ArquivoDados/RelatorioDasEnfases.csv";
        mostrarDados("Vector", arquivo);
    }//GEN-LAST:event_jButtonVectorActionPerformed

    private void jButtonLimparDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparDadosActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableGridDadosRelatorio.getModel();
        model.setNumRows(0);
    }//GEN-LAST:event_jButtonLimparDadosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimparDados;
    private javax.swing.JButton jButtonListaLinkedList;
    private javax.swing.JButton jButtonListarArrayList;
    private javax.swing.JButton jButtonListarDadosStack;
    private javax.swing.JButton jButtonVector;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableGridDadosRelatorio;
    // End of variables declaration//GEN-END:variables
}
